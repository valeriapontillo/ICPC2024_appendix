import numpy as np

#control metrics
codeChurnTotal=np.array([0.3939575294117647,0.443388,0.3839784339622641,0.6519786666666666,0.6514766000000001,0.3529839666666667,0.6336212758620687,0.41677066,0.6880275,0.4891618])
codeChurnMax=np.array([0.3835024705882353,0.443388,0.3008063207547169,0.6519786666666666,0.4978993,0.2895108333333333,0.5311813103448276,0.366086,0.6880275,0.4555174])
codeChurnAvg=np.array([0.3594128823529411,0.443388,0.3280250188679245,0.6519786666666666,0.4658988,0.2888970666666666,0.6079453793103449,0.31523738,0.6880275,0.4538876])
commits=np.array([0.030531,0.0333533636363636,0.0734030943396226,0.5859646666666667,0.2656986,0.0393757,0.1975196551724138,0.0864096,0.4526104999999999,0.2255647999999999])
contributors=np.array([0.0138282352941176,0.0243002727272727,0.0394156603773584,0.266989,0.0339621,0.0116253,0.0733025172413793,0.02270974,0.0,0.12554])
minorContributors=np.array([0.0013708235294117,0.0154317272727272,0.0016051132075471,0.266989,0.0322115999999999,0.0056468333333333,0.0252890689655172,0.0276101799999999,0.0,0.0997636])
contributorsExperience=np.array([0.0323158235294117,0.062765,0.1201575471698113,0.266989,0.2580432,0.2735800666666667,0.2509811034482758,0.27786742,0.0,0.2410978])
addLinesCount=np.array([0.4327915294117647,0.4196963636363636,0.4499185471698113,0.6519786666666666,0.6127256,0.2453216666666667,0.5213322068965517,0.48177198,0.6880275,0.5172784])
addLinesMax=np.array([0.4258663529411764,0.4196963636363636,0.4221438301886792,0.5089483333333333,0.6127256,0.2981731333333333,0.5603873103448275,0.41579396,0.3129389999999999,0.4555174])
addLinesAvg=np.array([0.4156555882352941,0.4196963636363636,0.3508050566037736,0.6519786666666666,0.5811067999999999,0.2113388666666666,0.427466551724138,0.3346612400000001,0.3129389999999999,0.4826212])
removedLinesCount=np.array([0.3365043529411765,0.410754,0.3536167358490565,0.6519786666666666,0.531273,0.2559614333333334,0.458817,0.34752266,0.6880275,0.4532435999999999])
removedLinesMax=np.array([0.3445306470588236,0.410754,0.3701904150943395,0.5089483333333333,0.4785545,0.2549856,0.5060015862068965,0.36423968,0.6880275,0.4786221999999999])
removedLinesAvg=np.array([0.3247695882352941,0.3780602727272727,0.3243970943396226,0.6519786666666666,0.5473524000000001,0.1799612666666666,0.3225263103448276,0.22824828,0.6880275,0.2640246])

#Test Code
LOC = np.array([0.5271467058823529,0.443388,0.5621093962264151,0.5089483333333333,0.6514766000000001,0.4508947333333333,0.5484967586206896,0.55690172,0.5516314999999999,0.5172784])
NOM = np.array([0.2729583529411765,0.4359747272727272,0.3359424716981132,0.5089483333333333,0.5107697,0.2728213666666666,0.3251109655172413,0.31122004,0.5093125,0.5172784])
WMC = np.array([0.3507644705882353,0.422326909090909,0.3688544905660377,0.5089483333333333,0.4667085,0.3216645666666667,0.4234580689655172,0.4182027,0.378345,0.4786221999999999])
RFC = np.array([0.4787271176470588,0.428098090909091,0.5704693018867926,0.5089483333333333,0.6035516000000001,0.4228914666666667,0.5355622413793103,0.3788030599999999,0.5093125,0.5172784])
AD = np.array([0.3556335882352941,0.443388,0.2490086415094339,0.5089483333333333,0.0,0.2343936,0.3784675172413793,0.13667768,0.0,0.0])

#Test Smells

AssertionRoulette = np.array([0.0097830588235294,0.2885654545454545,0.254907037735849,0.2658713333333333,0.3798847,0.1286315333333333,0.0013024137931034,0.0903199,0.0,0.2298128])
CI = np.array([0.0023996470588235,0.0706311818181818,0.0086062264150943,0.0,0.0,0.0031667333333333,0.0,0.00535014,0.0,0.0403433999999999])
CTL = np.array([0.002276,0.1420489090909091,0.0770495094339622,0.0697113333333333,0.4998391,0.0461499666666666,0.0,0.07772388,0.0,0.0440066])
DA = np.array([0.0042316470588235,0.014699,0.1932857924528301,0.4549623333333333,0.2317253999999999,0.0260355666666666,0.0004825172413793,0.04198038,0.1765435,0.0527293999999999])
ET = np.array([0.0117296470588235,0.1146341818181818,0.192752641509434,0.5089483333333333,0.1450774,0.1589605666666666,0.0,0.0,0.0,0.1835897999999999])
ECT = np.array([0.0114003529411764,0.3084879090909091,0.1104554339622641,0.5089483333333333,0.2546904,0.1705847666666666,0.0048375862068965,0.24694132,0.6880275,0.0797022])
GF = np.array([0.0078318823529411,0.0,0.0684479056603773,0.0,0.2088679,0.0095578666666666,0.0016525862068965,0.0639811399999999,0.0,0.0154831999999999])
IgT = np.array([0.2621798235294117,0.0,0.052158037735849,0.045775,0.0,0.0695685333333333,0.0897525862068965,0.03545182,0.2706199999999999,0.1476182])
LT = np.array([0.0130365294117647,0.1886555454545454,0.2844566037735849,0.5089483333333333,0.3525536999999999,0.2596374999999999,0.0,0.0,0.1765435,0.0977234])
MG = np.array([0.001087294117647,0.0909437272727272,0.0,0.0,0.0713106999999999,0.0161856333333333,0.0,0.0373861,0.0,0.0])
MNT = np.array([0.021402,0.3060914545454545,0.2782485283018868,0.5089483333333333,0.3849142,0.2319071333333333,0.0258343793103448,0.2549556999999999,0.6880275,0.3466014])
RA = np.array([0.0,0.0,0.0032669245283018,0.0,0.0123962,0.0111900333333333,0.0,0.0090922,0.0,0.0])
RO = np.array([0.0053050588235294,0.0,0.0656392641509433,0.0,0.0765009,0.0462714666666666,0.0,0.0473577799999999,0.0,0.0])
RP = np.array([0.0002496470588235,0.0,0.0004395849056603,0.0,0.0123962,0.0037414666666666,0.0,0.00947616,0.6880275,0.0343302])
SE = np.array([0.003190294117647,0.0148994545454545,0.1271462264150943,0.337705,0.0481308,0.0235740333333333,0.0026728275862068,0.02136546,0.0,0.0])
ST = np.array([0.0,0.006659,0.0,0.0697113333333333,0.1024602999999999,0.000876,0.0,0.01492664,0.0,0.0])
UT = np.array([0.001187,0.0954431818181818,0.1018509245283018,0.3410013333333333,0.2132636,0.0928421666666666,0.0181245517241379,0.09403708,0.0,0.2271561999999999])

# List of all the arrays for easy iteration
arrays = {

    "CCT": codeChurnTotal,
    "CCM": codeChurnMax,
    "CCA": codeChurnAvg,
    "Co" : commits,
    "Con": contributors,
    "MCon": minorContributors,
    "ConE":contributorsExperience,
    "ALC": addLinesCount,
    "ALM": addLinesMax,
    "ALA": addLinesAvg,
    "RLC": removedLinesCount,
    "RLM": removedLinesMax,
    "RLA": removedLinesAvg,
    "LOC": LOC,
    "NOM": NOM,
    "WMC": WMC,
    "RFC": RFC,
    "AD": AD,
    "AssertionRoulette": AssertionRoulette,
    "CI": CI,
    "CTL": CTL,
    "DA": DA,
    "ET": ET,
    "ECT": ECT,
    "GF": GF,
    "IgT": IgT,
    "LT": LT,
    "MG": MG,
    "MNT": MNT,
    "RA": RA,
    "RO": RO,
    "RP": RP,
    "SE": SE,
    "ST": ST,
    "UT": UT
}

# Calculating mean and standard deviation for each array and storing the results
results = []
for name, array in arrays.items():
    mean = np.mean(array)
    std = np.std(array)
    results.append((name, mean, std))

# Sorting the results by mean
sorted_results = sorted(results, key=lambda x: x[1], reverse = True)

# Printing the sorted results
for name, mean, std in sorted_results:
    print(f"{name}: Mean = {mean:.5f}, Standard Deviation = {std:.5f}")